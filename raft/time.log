ESTIMATE of time to complete assignment: 90 hours

      Time     Time
Date  Started  Spent Work completed
----  -------  ----  --------------
10/3  13:15pm  4:00  read the spec, start reading the raft paper
10/4   2:30pm  4:00  worked on 3A-1 (RequestVote)
10/5   3:00pm  5:00  worked on 3A-1 (RequestVote, AppendEntries)
10/7   4:00pm  5:00  worked on 3A-1 (RequestVote, AppendEntries, ticker, send_heartbeats)
10/9  10:30am  5:00  debugged 3A-1
10/11  4:00pm  5:00  debugged 3A-1
10/13  3:00pm  5:00  debugged 3A-1
10/21  2:00pm  5:00  debugged 3A-1
10/23  2:00pm  6:00  debugged 3A-1
10/24  3:00pm  6:00  worked on 3B-1
10/25  4:00pm  5:00  worked on 3B-1, debugged 3A-1
10/26  8:00pm  3:00  debugged 3B-1, 3A-1
10/27  9:00pm  4:00  debugged 3B-1, 3A-1
10/30  7:00pm  5:00  debugged 3B-1, 3A-1
10/31  8:00pm  4:00  debugged 3B-1, 3A-1
11/1   3:00pm  6:00  debugged 3B-1, 3A-1, implemented 3C, write unit tests, worked on 3A-2
               ----
               77:00  TOTAL time spent

I discussed my solution with: ChatGPT 4o, Sumit Chaturvedi.

This is definitely the most difficult programming project I have ever worked on. It took me very long time 
to align my understanding of the protocol behavior with the scheme described in the paper. During this process, 
most of the time was spent on testing my own understanding with running tests on the modified code. One particularly 
tricky thing about this process is that, when I found it still failed the test after some minor modifications, I 
would move on to make some other modifications; it was only after several rounds of this that I found the test results 
was getting worse than initially, but at that point I was no longer able to track which part of my previous modifications 
was problematic. I guess I may need to cultivate better habits of version control. The other tricky issue about this project 
is that the protocol is required to NOT have its safety depend on timing, which I found it extremely hard to guarantee in 
the process of development. I think this may stem from the fact that my understanding of the rules in the paper was still not 
100 per cent crystal-clear enough, or that I am not 100 per cent crystal-clear of how concurrency and mutices affect programs 
of different functionalities running “at the same time” (ticker, send_heartbeats, election, log replication). 
